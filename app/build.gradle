plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'

}
apply plugin: 'kotlin-kapt'

android {
    namespace 'com.example.workexperimentfetch'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.workexperimentfetch"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation platform("androidx.compose:compose-bom:$compose_bom")
    implementation "androidx.compose.runtime:runtime-livedata:$testRuntimeLivedata"
    implementation "androidx.compose.material:material:$compose_material"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material3:material3:$compose_material3"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    implementation "com.google.android.exoplayer:extension-mediasession:$exoplayer_version"


    // Android core dependencies
    implementation "androidx.core:core-ktx:$androidXCore"
    implementation "androidx.appcompat:appcompat:$androidXAppcompat"
    implementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"

    // Android view dependencies
    implementation "androidx.cardview:cardview:$androidXCardView"
    implementation "androidx.recyclerview:recyclerview:$androidXRecyclerView"
    implementation "androidx.constraintlayout:constraintlayout:$androidXConstraintLayout"
    implementation("androidx.paging:paging-runtime-ktx:$androidXPaging")
    implementation "androidx.navigation:navigation-fragment-ktx:$androidXNavigation"
    implementation "androidx.navigation:navigation-ui-ktx:$androidXNavigation"
    implementation "androidx.lifecycle:lifecycle-extensions:$androidXLifecycleExtensions"
    //noinspection LifecycleAnnotationProcessorWithJava8
    kapt "androidx.lifecycle:lifecycle-compiler:$androidXLifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidXLifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidXLifecycle"


    // Data Store
    implementation "androidx.datastore:datastore-preferences:$androidXDatastore"
    // ViewPager 2
    implementation("androidx.viewpager2:viewpager2:$androidXViewPager2")
    // Work Manager
    implementation "androidx.work:work-runtime-ktx:$androidXWorkRuntimeKtx"

    // Room Database
    implementation "androidx.room:room-runtime:$androidXRoom"
    implementation "androidx.room:room-ktx:$androidXRoom"
    kapt "androidx.room:room-compiler:$androidXRoom"

    implementation("io.coil-kt:coil-svg:$composeCoil")
    implementation("io.coil-kt:coil-compose:$composeCoil")


    // Google material
    implementation "com.google.android.material:material:$googleMaterial"

    // Retrofit network
    implementation("com.squareup.retrofit2:retrofit:$retrofit") {
        exclude module: 'com.squareup.okio'
        exclude module: 'okhttp'
    }
    implementation("com.squareup.retrofit2:converter-gson:$retrofit") {
        exclude module: 'okhttp'
    }
    // Retrofit RXJava
    implementation "io.reactivex:rxandroid:$rxAndroid"
    implementation "com.squareup.retrofit2:adapter-rxjava:$retrofitRxJava"
    // GSON
    implementation "com.google.code.gson:gson:$gson"

    // Glide
    kapt "com.github.bumptech.glide:ksp:$glide"
    implementation "com.github.bumptech.glide:glide:$glide"
    implementation "com.github.bumptech.glide:annotations:$glide"
    implementation("com.github.bumptech.glide:okhttp3-integration:$glide")

    // Dagger 2
    implementation "com.google.dagger:dagger:$dagger2"
    kapt "com.google.dagger:dagger-compiler:$dagger2"
    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_compiler_version"

    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$jetbrainsCoroutines")

    implementation "androidx.hilt:hilt-work:$androidXHiltWork"
    implementation "androidx.work:work-runtime-ktx:$androidXWorkKtx"

    implementation "androidx.activity:activity-compose:$compose_activity"
    implementation "androidx.constraintlayout:constraintlayout-compose:$compose_constraint_layout_version"
    implementation "com.google.accompanist:accompanist-navigation-animation:0.28.0"

    implementation("io.coil-kt:coil-svg:$coil")
    implementation("io.coil-kt:coil-compose:$coil")
    implementation "com.google.accompanist:accompanist-pager:$composeAccompanistPager"
    implementation "com.google.accompanist:accompanist-pager-indicators:$composeAccompanistPager"


    implementation "androidx.navigation:navigation-compose:$navigationVersion"
    implementation "androidx.hilt:hilt-navigation-compose:$hiltNavigationComposeVersion"
    implementation "androidx.paging:paging-compose:$pagingCompose"

    // OkHttp
    implementation(platform("com.squareup.okhttp3:okhttp-bom:$okHttp"))
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

}